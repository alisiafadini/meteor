[project]
name = "meteor"
description = "denoise crystallographic difference maps"
version = "0.2.0"
authors = [
    { name = "Alisia Fadini", email = "af840@cam.ac.uk" },
    { name = "Thomas Lane", email = "thomas.lane@desy.de" }
]
dependencies = [
    "numpy",
    "scipy",
    "gemmi",
    "scikit-image",
    "reciprocalspaceship",
    "pytest",
    "pytest-cov",
]

[project.optional-dependencies]
dev = [
    "pre-commit",
]

[build-system]
requires = ["setuptools >= 61.0"]
build-backend = "setuptools.build_meta"

[tool.mypy]
[[tool.mypy.overrides]]
module = "reciprocalspaceship.*,gemmi.*,scipy.*,skimage.*"
ignore_missing_imports = true

[tool.ruff]
line-length = 100
lint.flake8-pytest-style.fixture-parentheses = false
lint.select = [
    "ALL", # include all the rules, including new ones
]
lint.ignore = [
    #### modules
    "ANN", # flake8-annotations: ignore annotation-related errors
    "COM", # flake8-commas: ignore missing/extra commas
    "C90", # mccabe complexity: ignore code complexity checks
    "DJ",  # django: ignore Django-specific linting rules
    "EXE", # flake8-executable: ignore file execution permission errors
    "T10", # debugger: ignore debugger-related code (e.g., `pdb`)
    "TID", # flake8-tidy-imports: ignore tidy import-related checks

    #### specific rules
    "D100",   # ignore missing docstrings in module
    "D101",   # ignore missing docstrings in class
    "D102",   # ignore missing docstrings in public method
    "D103",   # ignore missing docstrings in function
    "D104",   # ignore missing docstrings in package
    "D105",   # ignore missing docstrings in magic methods (e.g., __init__)
    "D106",   # ignore missing docstrings in public nested class
    "D107",   # ignore missing docstrings in __init__ method
    "D200",   # ignore incorrect indentation of docstring (1st line should be empty)
    "D205",   # ignore failure to separate summary line from description in docstring
    "D212",   # ignore multiline docstring summary errors
    "D400",   # ignore docstring should end with period
    "D401",   # ignore docstring should be in imperative mood
    "D415",   # ignore first line of docstring should be a one-liner
    "E402",   # ignore module level import not at top of file (e.g., for local imports)
    "E501",   # ignore line too long (over 79 characters)
    "TRY003", # ignore external messages in exceptions being too verbose
    "TD002",  # ignore undefined rule (from flake8-todos plugin)
    "TD003",  # ignore another undefined rule (from flake8-todos plugin)
    "FIX002", # ignore too verbose descriptions of TODO comments
    "ISC001", # ignore rule related to invalid string escape sequences
    "PD002",  # allow inplace modifications in Pandas operations
    "TCH001", # type checking blocks
    "TCH002", # type checking blocks
    "TCH003", # type checking blocks
]
exclude = [
    "build/",
    "dist/",
    "migrations/",
    ".venv/",
    ".git/",
    "__pycache__/",
    "*.pyc",
]

[tool.ruff.lint.extend-per-file-ignores]
"test/**/*.py" = [
    "S101",     # asserts allowed in tests
    "ARG",      # unused function args -> fixtures
    "PLR2004",  # magic value used in comparison
    "FBT001",   # allow positional bools as function args
    "SLF001",   # access private methods
]

[tool.ruff.lint.pydocstyle]
convention = "numpy"

[tool.pytest.ini_options]
addopts = "--cov=meteor --cov-report=xml"
